{"version":3,"sources":["components/ListComponent.js","components/Dashboard.js","components/CreatePet.js","components/DetailComponent.js","components/Update.js","components/Wrapper.js","App.js","serviceWorker.js","index.js"],"names":["ListComponent","listState","className","map","item","i","key","name","type","to","_id","Dashboard","CreatePet","formState","setFormState","useState","errState","setErrState","handleChange","e","target","value","onSubmit","event","preventDefault","axios","post","then","res","console","log","description","skill1","skill2","skill3","navigate","catch","err","errors","response","data","errorArr","Object","keys","push","message","index","onChange","DetailComponent","removeFromDom","id","pet","setPet","useEffect","get","onClick","delete","Update","petState","setPetState","put","Wrapper","setListState","path","petId","filter","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.c30ae487.chunk.js","sourcesContent":["import React from 'react'\n\nimport { Link } from '@reach/router';\n\nconst ListComponent = ({listState}) =>{\n    return(\n        <div>\n            <table className=\"table table-dark\">\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Type</th>\n                        <th>Action</th>\n                    </tr>\n                </thead>\n                {listState.map((item, i) =>(\n                <tbody key={i}>\n                    <tr>\n                        <td>{item.name}</td>\n                        <td>{item.type}</td>\n                        <td>\n                        <Link to={\"/pets/\"+item._id}>\n                            Detail |\n                        </Link>\n                        <Link to={\"/pet/\"+item._id+ \"/edit\"}>\n                            Edit\n                        </Link>\n                        </td>\n                    </tr>\n                </tbody>\n                ))}\n            </table>\n        </div>\n    )\n\n}\nexport default ListComponent","import React from 'react'\nimport ListComponent from './ListComponent'\nimport { Link } from '@reach/router';\n\n\n\nconst Dashboard = ({listState}) => {\n    \n    return(\n        <div>\n            <div className=\"navbar\">\n            <h1>Pet Shelter</h1>\n            <Link to=\"/pets/new\">Add a pet to the shelter</Link>\n\n            </div>\n            <h3>These pets are looking for a good home</h3>\n            <ListComponent listState={listState}/>\n        </div>\n    )\n\n}\nexport default Dashboard","import React, {useState} from 'react'\nimport axios from 'axios'\nimport { Link, navigate } from '@reach/router';\n\n\nconst CreatePet = ({formState, setFormState}) => {\n    const [errState, setErrState] = useState([])\n\n    const handleChange = (e) =>{\n        setFormState({\n            ...formState,\n            [e.target.name] : e.target.value\n        })\n    }\n    const handSubmit = (event) =>{\n        event.preventDefault()\n        axios.post(\"http://localhost:8000/api/pets\", formState)\n            .then(res =>{\n                console.log(res)\n                setFormState({\n                    name:'',\n                    type:'',\n                    description:'',\n                    skill1:'',\n                    skill2:'',\n                    skill3:''\n                })\n                console.log(formState)\n                navigate(\"/\")\n            })\n            .catch(err => {\n                const {errors} = err.response.data;\n                const errorArr = []\n                for(const key of Object.keys(errors)){\n                    errorArr.push(errors[key].message)\n                }\n                setErrState(errorArr)\n            })\n    }\n    return(\n        <div>\n        <div className=\"navbar\">\n        <h1>Pet Shelter</h1>\n        <Link to='/'> Back to home</Link>\n        </div>\n        <h3>Knowing a pet needing home?</h3>\n        <form onSubmit={handSubmit} className=\"form-group\">\n        {errState.map((err, index) => <p key={index}>{err}</p>) }\n            <p>\n                Name:\n                <input type=\"text\" name=\"name\" onChange={handleChange} className=\"form-control\"/>\n                {/* {(errState.name)? <small className=\"ml-1 text-danger font-weight-bold\">WRONG</small>:null} */}\n            </p>\n            <p>\n                Type:\n                <input type=\"text\" name=\"type\" onChange={handleChange} className=\"form-control\"/>\n                {/* {(errState.type)? <small className=\"ml-1 text-danger font-weight-bold\">WRONG</small>:null} */}\n            </p>\n            <p>\n                Description:\n                <input  type=\"text\" name=\"description\" onChange={handleChange} className=\"form-control\"/>\n                {/* {(errState.description)? <small className=\"ml-1 text-danger font-weight-bold\">WRONG</small>:null} */}\n            </p>\n            <p>\n                Skill 01:\n                <input  type=\"tet\" name=\"skill1\" onChange={handleChange} className=\"form-control\"/>\n            </p>\n            <p>\n                Skill 02:\n                <input  type=\"text\" name=\"skill2\" onChange={handleChange} className=\"form-control\"/>\n            </p>\n            <p>\n                Skill 03:\n                <input  type=\"text\" name=\"skill3\" onChange={handleChange} className=\"form-control\"/>\n            </p>\n            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n        </form>\n        </div>\n    )\n}\nexport default CreatePet;","import React, {useEffect, useState} from 'react'\nimport axios from 'axios'\nimport { Link, navigate } from '@reach/router'\n\nconst DetailComponent = ({removeFromDom,id}) => {\n    const [pet, setPet] = useState({})\n    useEffect(() => {\n        axios.get('http://localhost:8000/api/pets/'+ id)\n            .then(res => setPet({\n                ...res.data\n            }))\n            .catch(err => console.log(err))\n    }, [])\n    const deleteAuthor = () => {\n        axios.delete('http://localhost:8000/api/pets/' + id)\n            .then(res => {\n                removeFromDom(id)\n                navigate('/')\n            })\n    }\n    return(\n        <div>\n            <div className=\"navbar\">\n            <h1>Pet Shelter</h1>\n            <Link to='/'> Back to home</Link>\n            </div>\n            <h3>Detail about: {pet.name}</h3>\n            <button type=\"submit\" className=\"btn btn-danger\" onClick={deleteAuthor}>\n                        Adopt {pet.name}\n                    </button>\n            <div className=\"jumbotron\">\n                <h4>Pet Type: {pet.type}</h4>\n                <h4>Description: {pet.description}</h4>\n                <h4>\n                    Skills: <h4>{pet.skill1}</h4>\n                    <h4>{pet.skill2}</h4>\n                    <h4>{pet.skill3}</h4>\n                </h4>\n            </div>\n\n        </div>\n    )\n}\nexport default DetailComponent","import React, {useEffect,useState} from 'react'\nimport axios from 'axios'\nimport { Link, navigate } from '@reach/router';\n\n\nconst Update = ({id}) => {\n    const [errState, setErrState] = useState([])\n    const [petState, setPetState] = useState({\n        name:'',\n        type:'',\n        description:''\n    })\n\n    const handleChange = (e) =>{\n        setPetState({\n            ...petState,\n            [e.target.name] : e.target.value\n        })\n    }\n\n    useEffect(() => {\n        axios.get('http://localhost:8000/api/pets/'+ id)\n            .then(res => setPetState({\n                ...res.data\n            }))\n            .catch(err => console.log(err))\n    }, [])\n    const handSubmit = (event) =>{\n        event.preventDefault()\n        axios.put(\"http://localhost:8000/api/pets/\"+ id + \"/edit\", petState)\n            .then(res =>{\n                console.log(res)\n                setPetState({\n                    name:'',\n                    type:'',\n                    description:''\n                })\n                navigate(\"/\")\n            })\n            .catch(err => {\n                const {errors} = err.response.data;\n                const errorArr = []\n                for(const key of Object.keys(errors)){\n                    errorArr.push(errors[key].message)\n                }\n                setErrState(errorArr)\n            })\n    }\n    return(\n        <div>\n            <div className=\"navbar\">\n                <h1>Pet Shelter</h1>\n                <Link to='/'> Back to home</Link>\n            </div>\n            <h3>Edit {petState.name}</h3>\n            <form onSubmit={handSubmit} className=\"form-group\">\n            {errState.map((err, index) => <p key={index}>{err}</p>) }\n                <p>\n                    Name:\n                    <input type=\"text\" value={petState.name} name=\"name\" onChange={handleChange} className=\"form-control\"/>\n                </p>\n                <p>\n                    Type:\n                    <input type=\"text\" value={petState.type} name=\"type\" onChange={handleChange} className=\"form-control\"/>\n                </p>\n                <p>\n                    Description:\n                    <input  type=\"text\" value={petState.description} name=\"description\" onChange={handleChange} className=\"form-control\"/>\n                </p>\n                <p>\n                    Skill 01:\n                    <input  type=\"text\" value={petState.skill1} name=\"skill1\" onChange={handleChange} className=\"form-control\"/>\n                </p>\n                <p>\n                    Skill 02:\n                    <input  type=\"text\" value={petState.skill2} name=\"skill2\" onChange={handleChange} className=\"form-control\"/>\n                </p>\n                <p>\n                    Skill 03:\n                    <input  type=\"text\" value={petState.skill3} name=\"skill3\" onChange={handleChange} className=\"form-control\"/>\n                </p>\n                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n            </form>\n        </div>\n    )\n}\nexport default Update;","import React, {useEffect, useState} from 'react'\nimport {Router} from '@reach/router'\nimport axios from 'axios'\nimport Dashboard from './Dashboard';\nimport CreatePet from './CreatePet';\nimport DetailComponent from './DetailComponent';\nimport Update from './Update';\n\nfunction Wrapper() {\n    const [formState, setFormState] = useState({\n        name:'',\n        type:'',\n        description:'',\n        skill1:'',\n        skill2:'',\n        skill3:''\n    });\n    const [listState, setListState] = useState([])\n    useEffect(() =>{\n        axios.get(\"http://localhost:8000/api/pets\")\n        .then(res => {\n            // console.log(res.data)\n            setListState(res.data)\n        })\n        .catch(err => console.log(\"Error: \",err))\n    }, [])\n    // console.log(listState);\n    const removeFromDom = petId => {\n        console.log(petId)\n        setListState(listState.filter(pet => pet._id !== petId));\n    }\n  return (\n    <div className=\"container\">\n        <Router>\n            <Dashboard path=\"/\" listState={listState}/>\n            <CreatePet path=\"pets/new\" formState={formState} setFormState={setFormState}/>\n            <DetailComponent path=\"pets/:id\" removeFromDom={removeFromDom}/>\n            <Update path=\"pet/:id/edit\" formState={formState} setFormState={setFormState}/>\n        </Router>\n    </div>\n  );\n}\n\nexport default Wrapper;\n","import React from 'react';\nimport './App.css';\nimport Wrapper from './components/Wrapper';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Wrapper/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}